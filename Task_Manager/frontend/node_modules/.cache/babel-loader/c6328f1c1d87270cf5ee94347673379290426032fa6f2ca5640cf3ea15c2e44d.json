{"ast":null,"code":"var _jsxFileName = \"/Users/nikki/Desktop/Task_Manager/frontend/src/pages/TasksPage.tsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/TasksPage.tsx\nimport React, { useEffect, useState } from 'react';\nimport { getTasks, createTask, updateTask, deleteTask } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n  const [newDesc, setNewDesc] = useState('');\n\n  // State for editing\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [editingDesc, setEditingDesc] = useState('');\n  const token = localStorage.getItem('token') || '';\n  const fetchTasks = async () => {\n    const data = await getTasks(token);\n    setTasks(data);\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const handleCreateTask = async e => {\n    e.preventDefault();\n    await createTask(token, newTitle, newDesc);\n    setNewTitle('');\n    setNewDesc('');\n    fetchTasks();\n  };\n  const handleDeleteTask = async id => {\n    await deleteTask(token, id);\n    fetchTasks();\n  };\n  const handleToggleComplete = async task => {\n    await updateTask(token, task.id, {\n      title: task.title,\n      description: task.description,\n      isComplete: !task.isComplete\n    });\n    fetchTasks();\n  };\n  const startEditing = task => {\n    setEditingTaskId(task.id);\n    setEditingTitle(task.title);\n    setEditingDesc(task.description || '');\n  };\n  const cancelEditing = () => {\n    setEditingTaskId(null);\n    setEditingTitle('');\n    setEditingDesc('');\n  };\n  const saveEditing = async id => {\n    var _tasks$find;\n    await updateTask(token, id, {\n      title: editingTitle,\n      description: editingDesc,\n      // Preserve current isComplete status\n      isComplete: ((_tasks$find = tasks.find(t => t.id === id)) === null || _tasks$find === void 0 ? void 0 : _tasks$find.isComplete) || false\n    });\n    cancelEditing();\n    fetchTasks();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateTask,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task title\",\n        value: newTitle,\n        onChange: e => setNewTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task description\",\n        value: newDesc,\n        onChange: e => setNewDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          margin: '1rem 0'\n        },\n        children: editingTaskId === task.id ?\n        /*#__PURE__*/\n        // Editing mode: show input fields and Save/Cancel buttons\n        _jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editingTitle,\n            onChange: e => setEditingTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editingDesc,\n            onChange: e => setEditingDesc(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => saveEditing(task.id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cancelEditing,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this) :\n        /*#__PURE__*/\n        // Normal display mode\n        _jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              textDecoration: task.isComplete ? 'line-through' : 'none'\n            },\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleToggleComplete(task),\n            style: {\n              marginRight: '1rem'\n            },\n            children: task.isComplete ? 'Mark Incomplete' : 'Mark Complete'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => startEditing(task),\n            style: {\n              marginRight: '1rem'\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksPage, \"i78SpR61V40d+csaP59MOEJj9tc=\");\n_c = TasksPage;\nexport default TasksPage;\nvar _c;\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"names":["React","useEffect","useState","getTasks","createTask","updateTask","deleteTask","jsxDEV","_jsxDEV","TasksPage","_s","tasks","setTasks","newTitle","setNewTitle","newDesc","setNewDesc","editingTaskId","setEditingTaskId","editingTitle","setEditingTitle","editingDesc","setEditingDesc","token","localStorage","getItem","fetchTasks","data","handleCreateTask","e","preventDefault","handleDeleteTask","id","handleToggleComplete","task","title","description","isComplete","startEditing","cancelEditing","saveEditing","_tasks$find","find","t","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","map","style","margin","onClick","textDecoration","marginRight","_c","$RefreshReg$"],"sources":["/Users/nikki/Desktop/Task_Manager/frontend/src/pages/TasksPage.tsx"],"sourcesContent":["// frontend/src/pages/TasksPage.tsx\nimport React, { useEffect, useState } from 'react';\nimport { getTasks, createTask, updateTask, deleteTask } from '../services/api';\n\ninterface Task {\n  id: number;\n  title: string;\n  description?: string;\n  isComplete: boolean;\n}\n\nconst TasksPage: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [newTitle, setNewTitle] = useState('');\n  const [newDesc, setNewDesc] = useState('');\n\n  // State for editing\n  const [editingTaskId, setEditingTaskId] = useState<number | null>(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [editingDesc, setEditingDesc] = useState('');\n\n  const token = localStorage.getItem('token') || '';\n\n  const fetchTasks = async () => {\n    const data = await getTasks(token);\n    setTasks(data);\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const handleCreateTask = async (e: React.FormEvent) => {\n    e.preventDefault();\n    await createTask(token, newTitle, newDesc);\n    setNewTitle('');\n    setNewDesc('');\n    fetchTasks();\n  };\n\n  const handleDeleteTask = async (id: number) => {\n    await deleteTask(token, id);\n    fetchTasks();\n  };\n\n  const handleToggleComplete = async (task: Task) => {\n    await updateTask(token, task.id, { \n      title: task.title, \n      description: task.description, \n      isComplete: !task.isComplete \n    });\n    fetchTasks();\n  };\n\n  const startEditing = (task: Task) => {\n    setEditingTaskId(task.id);\n    setEditingTitle(task.title);\n    setEditingDesc(task.description || '');\n  };\n\n  const cancelEditing = () => {\n    setEditingTaskId(null);\n    setEditingTitle('');\n    setEditingDesc('');\n  };\n\n  const saveEditing = async (id: number) => {\n    await updateTask(token, id, {\n      title: editingTitle,\n      description: editingDesc,\n      // Preserve current isComplete status\n      isComplete: tasks.find((t) => t.id === id)?.isComplete || false,\n    });\n    cancelEditing();\n    fetchTasks();\n  };\n\n  return (\n    <div>\n      <h2>Your Tasks</h2>\n      <form onSubmit={handleCreateTask}>\n        <input \n          type=\"text\" \n          placeholder=\"Task title\" \n          value={newTitle} \n          onChange={(e) => setNewTitle(e.target.value)}\n          required\n        />\n        <input \n          type=\"text\" \n          placeholder=\"Task description\" \n          value={newDesc}\n          onChange={(e) => setNewDesc(e.target.value)}\n        />\n        <button type=\"submit\">Add Task</button>\n      </form>\n      \n      <ul>\n        {tasks.map(task => (\n          <li key={task.id} style={{ margin: '1rem 0' }}>\n            {editingTaskId === task.id ? (\n              // Editing mode: show input fields and Save/Cancel buttons\n              <div>\n                <input \n                  type=\"text\" \n                  value={editingTitle} \n                  onChange={(e) => setEditingTitle(e.target.value)}\n                />\n                <input \n                  type=\"text\" \n                  value={editingDesc} \n                  onChange={(e) => setEditingDesc(e.target.value)}\n                />\n                <button onClick={() => saveEditing(task.id)}>Save</button>\n                <button onClick={cancelEditing}>Cancel</button>\n              </div>\n            ) : (\n              // Normal display mode\n              <div>\n                <strong style={{ textDecoration: task.isComplete ? 'line-through' : 'none' }}>\n                  {task.title}\n                </strong>\n                {task.description && <p>{task.description}</p>}\n                <button \n                  onClick={() => handleToggleComplete(task)} \n                  style={{ marginRight: '1rem' }}\n                >\n                  {task.isComplete ? 'Mark Incomplete' : 'Mark Complete'}\n                </button>\n                <button \n                  onClick={() => startEditing(task)} \n                  style={{ marginRight: '1rem' }}\n                >\n                  Edit\n                </button>\n                <button onClick={() => handleDeleteTask(task.id)}>Delete</button>\n              </div>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TasksPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}